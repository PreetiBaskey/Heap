#include<bits/stdc++.h>
using namespace std;

class Node {
    public:
        int data;
        int i;
        int j;
    Node(int data, int i, int j) {
        this->data = data;
        this->i = i;
        this->j = j;
    }
};

class myComparator {
    public:
        bool operator()(Node* a, Node* b) {
            return a-> data > b->data;
        }
};

vector<int> mergingKSortedArray(vector<vector<int>> &arr, int k) {
    priority_queue<Node*, vector<Node*>, myComparator> minHeap;
    
    for(int i = 0; i < k; i++) {
        Node* firstNodes = new Node(arr[i][0], i, 0);
        minHeap.push(firstNodes);
    }
    
    vector<int> result;
    
    while(minHeap.size() > 0) {
        Node* top_node = minHeap.top();
        minHeap.pop();
        result.push_back(top_node->data);
        int i = top_node->i;
        int j = top_node->j;
        
        if(j + 1 < arr[i].size()) {
            Node* newNode = new Node(arr[i][j + 1], i, j + 1);
            minHeap.push(newNode);
        }
    }
    
    return result;
}

int main() {
    
    vector<vector<int>> arr = {{1,2,3},{4,5,6},{7,8,9}};
    int k = 3;
    
    vector<int> result = mergingKSortedArray(arr, k);
    cout<<"Merged "<<k<<" dorted array is ;- ";
    for(auto data: result) {
        cout<<data<<" ";
    }
    
    return 0;
}
