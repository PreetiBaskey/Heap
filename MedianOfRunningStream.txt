#include<bits/stdc++.h>
using namespace std;

priority_queue<int> left_max_heap;  //max heap
priority_queue<int, vector<int>, greater<int>> right_min_heap;  //min heap

void addNum(int num) {
        if(left_max_heap.empty() || num < left_max_heap.top()) {
            left_max_heap.push(num);
        }
        else {
            right_min_heap.push(num);
        }
        
        if(abs((int)left_max_heap.size() - (int)right_min_heap.size()) > 1) {
            right_min_heap.push(left_max_heap.top());
            left_max_heap.pop();
        }
        else if(left_max_heap.size() > right_min_heap.size()) {
            left_max_heap.push(right_min_heap.top());
            right_min_heap.pop();
        }
        
    }
    
double findMedian() {
    if(left_max_heap.size() == right_min_heap.size()) {
        return (left_max_heap.top() + right_min_heap.top())/2;
    }
    else {
        return left_max_heap.top();
    }
}

int main() {
    
    int num;
    double result;
    for(int i = 0; i < 7; i++) {
        cout<<"Enter number :- ";
        cin>>num;
        addNum(num);
        result = findMedian();
    }
    cout<<endl<<"Median is :- "<<result;
    
    return 0;
}
