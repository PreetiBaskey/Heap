#include<bits/stdc++.h>
using namespace std;

void heapify(int arr[], int size, int i) {
    int largest = i;
    int leftIndex = 2 * i;
    int rightIndex = 2 * i + 1;
    
    while(leftIndex <= size && arr[leftIndex] > arr[largest]) {
        largest = leftIndex;
    }
    while(rightIndex <= size && arr[rightIndex] > arr[largest]) {
        largest = rightIndex;
    }
    if(largest != i) {
        int temp = arr[largest];
        arr[largest] = arr[i];
        arr[i] = temp;
        
        heapify(arr, size, largest);
    }
}

void heapSort(int arr[], int size) {

    while(size > 1) {
        int temp = arr[size];
        arr[size] = arr[1];
        arr[1] = temp;
        
        size--;
        
        heapify(arr, size, 1);
    }
}

int main() {
    
    int arr[] = {-1, 15, 5, 20, 1, 17, 10, 30};
    int size = 7;
    
    cout<<"Tree before hepifying :- ";
    for(int i = 1; i <= size; i++) {
        cout<<arr[i]<<" ";
    }
    
    //Performing Heapify
    for(int i = size/2; i >= 1; i--) {
        heapify(arr, size, i);
    }
    cout<<endl<<"Tree after heapifying :- ";
    for(int i = 1; i <= size; i++) {
        cout<<arr[i]<<" ";
    }
    
    cout<<endl<<"Tree after Heap Sort :- ";
    heapSort(arr, size);
    for(int i = 1; i <= size; i++) {
        cout<<arr[i]<<" ";
    }
    
    return 0;
}
