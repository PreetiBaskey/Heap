#include<bits/stdc++.h>
using namespace std;

void swap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}

void heapify(vector<int> &arr, int size, int i) {
    int largest = i;
    int leftIndex = 2 * i + 1;
    int rightIndex = 2 * i + 2;
    
    if(leftIndex <= size && arr[largest] < arr[leftIndex]) {
        largest = leftIndex;
    }
    if(rightIndex <= size && arr[largest] < arr[rightIndex]) {
        largest = rightIndex;
    }
    if(largest != i) {
        swap(arr[largest], arr[i]);
        
        heapify(arr, size, largest);
    }
}

vector<int> merge2BinaryMaxHeap(vector<int> &arr, vector<int> &brr, int n, int m) {
    
    vector<int> result;
    
    for(int i = 0; i < n; i++) {
        result.push_back(arr[i]);
    }
    for(int i = 0; i < m; i++) {
        result.push_back(brr[i]);
    }
    
    // Heapify the merged vector/ array
    for(int i = ((n + m) / 2) - 1; i >= 0; i--) {
        heapify(result, n + m, i);
    }
    
    return result;
}

int main() {
    
    // Given
    vector<int> arr = {10, 5, 6, 2};
    vector<int> brr = {12, 7, 9};
    int n = 4, m = 3;
    
    vector<int> result = merge2BinaryMaxHeap(arr, brr, n, m);
    cout<<"Merged 2 binary max heap is :- ";
    for(auto data: result) {
        cout<<data<<" ";
    }
    
    return 0;
}
